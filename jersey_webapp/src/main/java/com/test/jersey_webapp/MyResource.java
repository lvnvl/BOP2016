
package com.test.jersey_webapp;

import javax.ws.rs.Consumes;
import javax.ws.rs.GET;
import javax.ws.rs.Path;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;

import org.codehaus.jettison.json.JSONArray;
import org.codehaus.jettison.json.JSONException;
import org.codehaus.jettison.json.JSONObject;
import org.slf4j.LoggerFactory;

import com.test.pojo.User;
import com.test.utils.PathFinder;

/** Example resource class hosted at the URI path "/myresource"
 */
@Path("/")
public class MyResource {

    @GET
    @Produces(MediaType.APPLICATION_JSON)
    public JSONArray getArrayPairs(@QueryParam("id1") long a , @QueryParam("id2") long b) throws JSONException {
    	System.out.println("sum is:\n"+(a+b));
    	LoggerFactory.getLogger(this.getClass()).info("******************************************************************"
    			+ "\nlogger info output!-----------"
    			+"[id1,id2]:["+a+","+b+"]");
//    	JSONArray resultArray = new JSONArray();
//    	if(a == Long.parseLong("2251253715") && b == Long.parseLong("2180737804")){
////    		resultArray = new JSONArray("[[2251253715,2180737804]]");
//    	}else if(a == Long.parseLong("2147152072") && b == Long.parseLong("189831743")){
//    		resultArray = new JSONArray("[[2147152072,41008148,189831743],[2147152072,2108624295,41008148,189831743],[2147152072,2037360998,41008148,189831743],[2147152072,2118020653,41008148,189831743],[2147152072,2171306357,41008148,189831743],[2147152072,143050917,41008148,189831743],[2147152072,2052905588,41008148,189831743],[2147152072,2114973222,41008148,189831743],[2147152072,2118479465,41008148,189831743],[2147152072,2094288026,41008148,189831743],[2147152072,2075503584,41008148,189831743],[2147152072,2117852776,41008148,189831743],[2147152072,1980102227,48702757,189831743],[2147152072,1980102227,41008148,189831743],[2147152072,2042857885,41008148,189831743],[2147152072,1559829653,41008148,189831743],[2147152072,2032539996,41008148,189831743],[2147152072,1970095591,41008148,189831743],[2147152072,2123263490,41008148,189831743],[2147152072,2038098415,41008148,189831743],[2147152072,2047568556,41008148,189831743],[2147152072,2111343997,41008148,189831743],[2147152072,2115477168,41008148,189831743],[2147152072,1511885491,41008148,189831743],[2147152072,2084580589,41008148,189831743],[2147152072,2073652000,48702757,189831743],[2147152072,2107751709,41008148,189831743],[2147152072,2128526850,41008148,189831743],[2147152072,2294040673,41008148,189831743],[2147152072,1570159982,41008148,189831743],[2147152072,2168590775,41008148,189831743],[2147152072,2046917379,41008148,189831743],[2147152072,2155635068,41008148,189831743],[2147152072,2106948753,41008148,189831743],[2147152072,2149552406,41008148,189831743],[2147152072,2005005965,41008148,189831743],[2147152072,2012759790,41008148,189831743],[2147152072,1562070037,41008148,189831743],[2147152072,2163454439,41008148,189831743],[2147152072,2098392074,41008148,189831743],[2147152072,2161308148,41008148,189831743],[2147152072,2015488270,41008148,189831743],[2147152072,1534548568,41008148,189831743],[2147152072,1857527683,41008148,189831743],[2147152072,2150449434,41008148,189831743],[2147152072,2055388088,41008148,189831743],[2147152072,2104736817,41008148,189831743],[2147152072,2106731737,41008148,189831743],[2147152072,1979807571,48702757,189831743],[2147152072,1979807571,41008148,189831743],[2147152072,2131623509,41008148,189831743],[2147152072,2050243438,41008148,189831743],[2147152072,1593679764,41008148,189831743],[2147152072,1970885633,41008148,189831743],[2147152072,2103467036,41008148,189831743],[2147152072,1987413769,41008148,189831743],[2147152072,1982621520,41008148,189831743],[2147152072,2150957489,41008148,189831743],[2147152072,2138996475,41008148,189831743],[2147152072,2137972458,41008148,189831743],[2147152072,2066684581,41008148,189831743],[2147152072,2042406963,48702757,189831743],[2147152072,2042406963,41008148,189831743],[2147152072,2025679133,48702757,189831743],[2147152072,2025679133,41008148,189831743],[2147152072,2003650253,41008148,189831743],[2147152072,2011362889,41008148,189831743],[2147152072,1551449546,41008148,189831743],[2147152072,2159563018,41008148,189831743],[2147152072,1982617497,41008148,189831743],[2147152072,2106772512,41008148,189831743],[2147152072,2064321206,41008148,189831743],[2147152072,1991366406,48702757,189831743],[2147152072,2095906131,41008148,189831743],[2147152072,1993668358,41008148,189831743],[2147152072,1602412127,41008148,189831743],[2147152072,1991374703,41008148,189831743],[2147152072,2088652183,41008148,189831743],[2147152072,2096860432,41008148,189831743],[2147152072,1987565463,41008148,189831743],[2147152072,1516170165,41008148,189831743],[2147152072,2043762721,41008148,189831743],[2147152072,1963771106,41008148,189831743]]");
//    	}else{
////    		resultArray = new JSONArray("[[2332023333,1158167855,2310280492]]");
//    	}
    	PathFinder pathFinder = new PathFinder(a,b);
    	JSONArray resultArray = pathFinder.getPaths();
    	LoggerFactory.getLogger(getClass()).info("===================find:\n"+resultArray.toString());
    	return resultArray;
    }
    
    @GET
    @Path("/getUserXml")
    @Produces(MediaType.APPLICATION_XML)
    public User getUserXml() {
     User user  = new User();
     try {

         user.setName("snail");
         user.setAge("22");
         user.setSex("male");
	} catch (Exception e) {
		// TODO: handle exception
	}
     user.setAge("88");
     return user;
    }
    
    @GET
    @Path("/getUserJson")
    @Consumes(MediaType.APPLICATION_JSON)
    @Produces(MediaType.APPLICATION_JSON)
    public User getUserJson(@QueryParam("query") JSONObject query) throws JSONException {
    	User user  = new User();
    	user.setAge(query.getString("age"));
    	user.setName(query.getString("name"));
    	user.setSex(query.getString("sex"));
    	return user;
    }
}
